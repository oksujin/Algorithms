##### 표준 라이브러리 #####
## 표준 라이브러리란 특정한 프로그래밍 언어에서 자주 사용되는 표준 소스코드를 미리 구현해 놓은 라이브러리를 의미한다.
## 표준 라이브러리 공식 문서 : https://docs.python.org/ko/3/library/index.html
print("\n ### 내장함수 ### ")
####################################################
### 내장함수 ###
# 라이브러리를 import 하지 않고 바로 사용할 수 있는 내장 함수
# print(), input(), sorted(), min(), max(), sum()

## eval() : 수학 수식이 문자열 형식으로 들어오면, 해당 수식 계산 결과 반환
result = eval("(3+5) * 7")
print(f"\neval 함수 계산 결과 : {result}")

## sorted : iterable(반복 가능한 객체 / 리스트, 사전자료형, 튜플 자료형)의 정렬결과 반환
# key 속성을 이용하여 정렬 기준을 명시할 수 있다.
# ex) 리스트의 원소를 튜플의 두 번째 원소를 기준으로 내림차순 정렬
ex = [('홍길동', 35), ('이순신', 75), ('아무개', 50)]
ex = sorted(ex, key = lambda x : x[1], reverse = True)
print(f"\nkey를 활용하여 정렬한 결과 : {ex}")

# + 리스트의 경우에는 자체 sort() 함수가 있어서, sorted()를 안써도 된다.
data = [5, 1, 7, 2, 3]
data.sort()
print(f"list는 그냥 정렬 가능 : {data}")

####################################################
### itertools ###
# 반복되는 형태의 데이터를 처리하는 기능 제공 / 순열, 조합 라이브러리

####################################################
### heapq ###
# 힙(Heap) 기능 제공 / 우선순위 큐 기능을 구현하기 위해 사용

####################################################
### bisect ###
# 이진 탐색(Binary Search) 기능 제공

####################################################
### collections ###
# 덱(deque), 카운터(Counter) 등 유용한 자료구조 포함

####################################################
### math ###
# 팩토리얼, 제곱근, 최대공약수(GCD), 삼각함수 함수 & 파이(pi) 상수